{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfdemostevedf"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"MongoDbAtlas1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MongoDbAtlas1'"
		},
		"az_sql_1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'az_sql_1'"
		},
		"ls_adfdemostevedlg_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adfdemostevedlg'"
		},
		"ls_adfdemostevedlg_product_csv_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_adfdemostevedlg_product_csv'"
		},
		"ls_adsl_output_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adsl_output'"
		},
		"ls_azblob_adfdemostevea_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_azblob_adfdemostevea'"
		},
		"ls_onprem_udemycourse_db_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_onprem_udemycourse_db'"
		},
		"ls_stevea_sqlserver_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_stevea_sqlserver'"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "stevea"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Udemy_azure_course"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		},
		"MongoDbAtlas1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "blog"
		},
		"REST_ee_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://dummy.restapiexample.com/api/v1/employees"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://dummy.restapiexample.com/api/v1/employees"
		},
		"az_sql_1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "adf-demo-sql-server-sja.database.windows.net"
		},
		"az_sql_1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "adf-demo-sql-db"
		},
		"az_sql_1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "serveradmin"
		},
		"ds_rest_input_ee_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://dummy.restapiexample.com/api/v1/employees"
		},
		"ls_adfdemostevedlg_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfdemostevedlg.dfs.core.windows.net/"
		},
		"ls_adsl_output_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adfdemostevedlgout.dfs.core.windows.net/"
		},
		"ls_onprem_udemycourse_db_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "stevea"
		},
		"ls_onprem_udemycourse_db_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Udemy_azure_course"
		},
		"ls_onprem_udemycourse_db_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		},
		"ls_rest_service_input_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dummyjson.com/c/effa-b402-4759-9713"
		},
		"ls_stevea_sqlserver_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "stevea"
		},
		"ls_stevea_sqlserver_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorks2022"
		},
		"ls_stevea_sqlserver_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		},
		"tr_storageevent_demo_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/8632adbe-0938-47d7-8280-1c9f4785d918/resourceGroups/ADF-demo/providers/Microsoft.Storage/storageAccounts/adfdemostevea"
		},
		"ls_rest_traveline_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://TravelineAPI689:oV2raeli@nextbus.mxdata.co.uk/nextbuses/1.0/1"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select * From employee where gender = 'F'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Dept",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Dept",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azsql_db_employee_tbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adls_output_emp_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-10T19:55:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azsql_db_employee_tbl')]",
				"[concat(variables('factoryId'), '/datasets/ds_adls_output_emp_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select  * from dept",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_dept_name",
										"value": {
											"value": "@item().Dept_Name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_dept_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-11T16:17:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_azblob_input_folder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata1').output.childItems.name",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "var1",
										"value": "1"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var1": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T14:04:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azblob_input_folder')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_azure_realworld_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TABLE_SCHEMA, TABLE_NAME from information_schema.TABLES\nwhere TABLE_TYPE = 'BASE TABLE' and TABLE_SCHEMA = 'dbo';\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_azure_sql_rw2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "look up tables present in db",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_azure_sql_tables_rw2",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText3",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-11T18:48:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azure_sql_rw2')]",
				"[concat(variables('factoryId'), '/datasets/ds_azure_sql_tables_rw2')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_REST_API_ee')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['message']"
										},
										"sink": {
											"name": "json_data",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "RestResource2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-11T12:04:29Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource2')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy data from azblob to adls",
						"description": "copy data from azblob to adls",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "input",
								"value": "input//emp_details.csv"
							},
							{
								"name": "output",
								"value": "output//sja.csv"
							},
							{
								"name": "Source",
								"value": "input//emp_details.csv"
							},
							{
								"name": "Destination",
								"value": "output//sja.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 1
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Info",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "ls_adfdemostevedlg",
										"type": "LinkedServiceReference"
									},
									"path": "output"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Emp_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Emp_id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Salary",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Salary",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_input_emp_details_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_output_emp_details",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T16:21:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_input_emp_details_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_output_emp_details')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_dynamically')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_dynamic_copy_list",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select ', item().Columns,' from ', item().Source_Table,' where ',item().Filter_Col,' = ''',item().Filter_Value,'''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "FlattenHierarchy"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_azure_sql",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DelimitedText9",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().Dest_Dataset",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"tablename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-18T16:21:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_dynamic_copy_list')]",
				"[concat(variables('factoryId'), '/datasets/ds_azure_sql')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText9')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_hosted_ir')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BusinessEntityID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BusinessEntityID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "NationalIDNumber",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "NationalIDNumber",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LoginID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LoginID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationNode",
											"physicalType": "hierarchyid"
										},
										"sink": {
											"name": "OrganizationNode",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "OrganizationLevel",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "OrganizationLevel",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "JobTitle",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "JobTitle",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BirthDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "BirthDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "MaritalStatus",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "nchar"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "HireDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "HireDate",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SalariedFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "SalariedFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VacationHours",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "VacationHours",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SickLeaveHours",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "SickLeaveHours",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CurrentFlag",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "CurrentFlag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "rowguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "rowguid",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "HumanResources",
									"TableName": "Employee"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_azureblob_store_ir_output",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-11T13:59:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/ds_azureblob_store_ir_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_fault_tolerance')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "ls_azblob_adfdemostevea",
										"type": "LinkedServiceReference"
									},
									"path": "logging"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Salary",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Salary",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Dept_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Dept",
											"type": "String",
											"physicalType": "char"
										}
									},
									{
										"source": {
											"name": "Date_of_Join",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DOJ",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_baddata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_azure_sqldb_employee_new",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-11T17:15:59Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_baddata')]",
				"[concat(variables('factoryId'), '/datasets/ds_azure_sqldb_employee_new')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_filename_dynamically')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": "$$FILEPATH"
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "Sales*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Product_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product_code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Price",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azblob_input_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-10T17:03:48Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azblob_input_folder')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_multiple_files_azblob_to_adsl')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "Sales*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Product_code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Product_code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Price",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_azblob_input_folder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_output_emp_details",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-10T16:24:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_azblob_input_folder')]",
				"[concat(variables('factoryId'), '/datasets/ds_output_emp_details')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dataflow_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_scd2_demo",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Data flow1_copy1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Data flow1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_scd2_demo_step2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-20T14:32:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_scd2_demo')]",
				"[concat(variables('factoryId'), '/dataflows/df_scd2_demo_step2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_delete_actvitiy_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "ls_adfdemostevedlg",
									"type": "LinkedServiceReference"
								},
								"path": "output"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T18:36:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_demo_parameters')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sd_az_ir_param_demo",
								"type": "DatasetReference",
								"parameters": {
									"table_name": {
										"value": "@pipeline().parameters.SourceTableNameFromParameter",
										"type": "Expression"
									},
									"schema_name": "dbo"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SourceTableNameFromParameter": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-11T13:59:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sd_az_ir_param_demo')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_execute_activity_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_execute_activity_demo_child1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Execute Pipeline2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute Pipeline1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_execute_activity_demo_child2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T20:01:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_execute_activity_demo_child1')]",
				"[concat(variables('factoryId'), '/pipelines/pl_execute_activity_demo_child2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_execute_activity_demo_child1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait_child1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T20:01:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_execute_activity_demo_child2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1_child2",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T20:01:14Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_expression_func_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var1",
							"value": {
								"value": "@string(pipeline().parameters.minMarks)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from marks where marks >= ',pipeline().parameters.minMarks)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_sql_marks",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_adsl_output_dyn",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"minMarks": {
						"type": "string"
					}
				},
				"variables": {
					"var1": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-18T15:02:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_marks')]",
				"[concat(variables('factoryId'), '/datasets/ds_adsl_output_dyn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_filter_foreach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.ListOfNumbers",
								"type": "Expression"
							},
							"condition": {
								"value": "@greater(item(), 7)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "var_dept_name",
										"value": {
											"value": "@string(item())",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ListOfNumbers": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9,
							10
						]
					}
				},
				"variables": {
					"var_dept_name": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-13T15:44:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_if_condition')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(pipeline().parameters.ifIndia)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy data false",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DelimitedText6",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_output_employee_csv_india",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy data true",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_input_emp_details_csv",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_output_employee_csv_india",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ifIndia": {
						"type": "bool",
						"defaultValue": false
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T16:21:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText6')]",
				"[concat(variables('factoryId'), '/datasets/ds_output_employee_csv_india')]",
				"[concat(variables('factoryId'), '/datasets/ds_input_emp_details_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_real_work_ex_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@adddays(utcNow(), -1)",
										"type": "Expression"
									},
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText4",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText5",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T15:51:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText4')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_rw4_audit_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[audit_rw_4_stp]",
							"storedProcedureParameters": {
								"message": {
									"value": {
										"value": "@concat('pipeline name:', pipeline().Pipeline)",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "az_sql_1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T18:21:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_rws4_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_rws4_config",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('select * From ', item().table_name, ' where trans_timestamp > ''',item().waterMark ,'''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_rws4_load",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_rws4_folder1",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Lookup1_copy1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "update config set watermark = (select max(trans_timestamp) from transactions)\nselect 1 as some_value",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_rws4_config",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Lookup1_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_log_pipeline_rundetails]",
							"storedProcedureParameters": {
								"p_pipeline_name": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_pipeline_run_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"p_trigger_type": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "az_sql_1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-20T16:48:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_rws4_config')]",
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]",
				"[concat(variables('factoryId'), '/datasets/ds_rws4_load')]",
				"[concat(variables('factoryId'), '/datasets/ds_rws4_folder1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_set_a_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "filename",
							"value": {
								"value": "@concat(pipeline().parameters.trig_filename, '-', string(utcNow()))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"trig_filename": {
						"type": "string",
						"defaultValue": "xyz"
					}
				},
				"variables": {
					"filename": {
						"type": "String",
						"defaultValue": "abcd"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-11T15:24:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_stored_procedure_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_delete_dept]",
							"storedProcedureParameters": {
								"p_dept_name": {
									"value": {
										"value": "@pipeline().parameters.deptName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "az_sql_1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"deptName": {
						"type": "string",
						"defaultValue": "Steve"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T17:43:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_switch_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.countryName",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "India",
									"activities": [
										{
											"name": "Wait India",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 15
											}
										}
									]
								},
								{
									"value": "UK",
									"activities": [
										{
											"name": "Wait UK",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 20
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "wait default",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 5
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"countryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T16:58:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_switch_demo_for_fail_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.countryName",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "India",
									"activities": [
										{
											"name": "Wait India",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 15
											}
										}
									]
								},
								{
									"value": "UK",
									"activities": [
										{
											"name": "Wait UK",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 20
											}
										}
									]
								}
							],
							"defaultActivities": [
								{
									"name": "Fail1",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "101",
										"errorCode": "Cannot handle this country"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"countryName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T19:36:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_validation_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Validation1",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DelimitedText8",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:00:15",
							"sleep": 10,
							"minimumSize": 1
						}
					},
					{
						"name": "wait works",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					},
					{
						"name": "wait fails",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Validation1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 20
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T17:19:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText8')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_variable_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"additionalColumns": [
									{
										"name": "pipeline_name",
										"value": {
											"value": "@pipeline().DataFactory",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "emp_name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "emp_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "salary",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										},
										"sink": {
											"name": "salary",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 19
										}
									},
									{
										"source": {
											"name": "pipeline_name",
											"type": "String"
										},
										"sink": {
											"name": "new_field",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sd_az_ir_param_demo",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "employee",
									"schema_name": "dbo"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[demo_stp]",
							"storedProcedureParameters": {
								"aud_message": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_onprem_udemycourse_db",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_demo1": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-11T14:06:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sd_az_ir_param_demo')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable3')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_onprem_udemycourse_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_wait_demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.items",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Wait1_copy1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Wait1_copy2",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Wait1_copy1_copy1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Wait1_copy3",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Wait1_copy1_copy2",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Wait1_copy2_copy1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								},
								{
									"name": "Wait1_copy1_copy1_copy1",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 10
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"items": {
						"type": "array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5
						]
					}
				},
				"variables": {
					"items": {
						"type": "Array",
						"defaultValue": [
							1,
							2,
							3,
							4,
							5
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-12T16:26:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_wait_demo_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "trigger_name",
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "trigger_date",
							"value": {
								"value": "@string(pipeline().TriggerTime)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"trigger_name": {
						"type": "String"
					},
					"trigger_date": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2024-11-19T12:23:50Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Customer",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Product_code",
						"type": "varchar"
					},
					{
						"name": "Price",
						"type": "varchar"
					},
					{
						"name": "Filename",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Sales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_onprem_udemycourse_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "json_data",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "JsonInput"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_onprem_udemycourse_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_onprem_udemycourse_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "emp_name",
						"type": "varchar"
					},
					{
						"name": "salary",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_onprem_udemycourse_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Dept_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dept_Name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dept"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Emp_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Emp_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dept_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employees_tbl"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sales_04262022.csv",
						"folderPath": "delete1",
						"fileSystem": "deletedemo"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "restoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "demo_param.csv",
						"container": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Product_code",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.*",
						"container": "input2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Product_code",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Product_code",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "HumanResources.Employee.txt",
						"container": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "String"
					},
					{
						"name": "NationalIDNumber",
						"type": "String"
					},
					{
						"name": "LoginID",
						"type": "String"
					},
					{
						"name": "OrganizationNode",
						"type": "String"
					},
					{
						"name": "OrganizationLevel",
						"type": "String"
					},
					{
						"name": "JobTitle",
						"type": "String"
					},
					{
						"name": "BirthDate",
						"type": "String"
					},
					{
						"name": "MaritalStatus",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "HireDate",
						"type": "String"
					},
					{
						"name": "SalariedFlag",
						"type": "String"
					},
					{
						"name": "VacationHours",
						"type": "String"
					},
					{
						"name": "SickLeaveHours",
						"type": "String"
					},
					{
						"name": "CurrentFlag",
						"type": "String"
					},
					{
						"name": "rowguid",
						"type": "String"
					},
					{
						"name": "ModifiedDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abcd.csv",
						"container": "validation-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "abcd.csv",
						"container": "validation-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adsl_output",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": "df-output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adsl_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your REST/HTTP",
				"linkedServiceName": {
					"referenceName": "REST_ee",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/REST_ee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ds_rest_input_ee",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ds_rest_input_ee')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_rest_service_input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_rest_service_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your Azure Data Lake Store",
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_stevea_sqlserver",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string",
						"defaultValue": "HumanResources"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "Employee"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "BusinessEntityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NationalIDNumber",
						"type": "nvarchar"
					},
					{
						"name": "LoginID",
						"type": "nvarchar"
					},
					{
						"name": "OrganizationNode",
						"type": "hierarchyid"
					},
					{
						"name": "OrganizationLevel",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "JobTitle",
						"type": "nvarchar"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "Gender",
						"type": "nchar"
					},
					{
						"name": "HireDate",
						"type": "date"
					},
					{
						"name": "SalariedFlag",
						"type": "bit"
					},
					{
						"name": "VacationHours",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "SickLeaveHours",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CurrentFlag",
						"type": "bit"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SchemaName",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_stevea_sqlserver')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_ir_output_variable_demo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_onprem_udemycourse_db",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_onprem_udemycourse_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_ds_employee_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employee.csv",
						"fileSystem": "df-input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Dept_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adl_out')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adsl_output",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "\"out_hr.csv\"",
							"type": "Expression"
						},
						"fileSystem": "df-output"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Dept_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adsl_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_output_emp_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sql_emp.csv",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adls_output_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl_output_dyn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('filteredby', string(utcNow()), '.csv')",
							"type": "Expression"
						},
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Product_code",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl_realworld_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "*.csv",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Product_code",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_adsl_rest_output_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "rest_out.json",
						"fileSystem": "output"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_all_tables_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Product_code",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azblob_input_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "*.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azblob_rest_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "rest_output.csv",
						"container": "restoutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azsql_db_employee_tbl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Dept",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azure_dept')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Dept_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dept_Name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dept"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azure_realworld_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string",
						"defaultValue": "sja"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azure_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azure_sql_rw2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azure_sql_tables_rw2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azure_sqldb_employee_new')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "char"
					},
					{
						"name": "Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dept",
						"type": "char"
					},
					{
						"name": "DOJ",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee_new"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azureblob_store_ir_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "demo"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azuresql_database_copy_tables_dyn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "sja"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_azuresql_db_all_tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "emp_name",
						"type": "varchar"
					},
					{
						"name": "salary",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_baddata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "emp_datatype_mismatch.csv",
						"container": "sql-bad-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Dept_id",
						"type": "String"
					},
					{
						"name": "Date_of_Join",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dynamic_copy_list')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Copy_config.csv",
						"container": "dyn-copy"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Source_Table",
						"type": "String"
					},
					{
						"name": "Dest_Dataset",
						"type": "String"
					},
					{
						"name": "Columns",
						"type": "String"
					},
					{
						"name": "Filter_Col",
						"type": "String"
					},
					{
						"name": "Filter_Value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employee_skill_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employee_skills.json",
						"container": "input"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"emp_id": {
							"type": "string"
						},
						"emp_name": {
							"type": "object",
							"properties": {
								"first_name": {
									"type": "string"
								},
								"last_name": {
									"type": "string"
								}
							}
						},
						"skills": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_employees_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "employee.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Dept_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_input_emp_details_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azblob_adfdemostevea",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "dbo.employee.txt",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_azblob_adfdemostevea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_new_ee_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Emp_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Emp_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dept_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Is_Active",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employees_SCD2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_output_emp_details')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sales",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_output_employee_csv_india')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "India",
						"fileSystem": "ifcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_input_ee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rws4_config')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "table_name",
						"type": "varchar"
					},
					{
						"name": "waterMark",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "config"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rws4_folder1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "transactions.csv",
						"folderPath": "folder1",
						"fileSystem": "rws4"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rws4_load')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rws_output_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_scd2_input')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "employee.csv",
						"fileSystem": "csd2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Emp_id",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Salary",
						"type": "String"
					},
					{
						"name": "Dept_id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_csd2_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Emp_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Emp_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "Salary",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dept_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Is_Active",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "employees_SCD2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_marks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sql_1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "marks",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "marks"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sql_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sd_az_ir_param_demo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string",
						"defaultValue": "employee"
					},
					"schema_name": {
						"type": "string",
						"defaultValue": "dbo"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "emp_name",
						"type": "varchar"
					},
					{
						"name": "salary",
						"type": "decimal",
						"precision": 19,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": "employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "self-hosted-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/self-hosted-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDbAtlas1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MongoDbAtlas",
				"typeProperties": {
					"connectionString": "[parameters('MongoDbAtlas1_connectionString')]",
					"database": "[parameters('MongoDbAtlas1_properties_typeProperties_database')]",
					"driverVersion": "v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/REST_ee')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('REST_ee_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sql_1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('az_sql_1_properties_typeProperties_server')]",
					"database": "[parameters('az_sql_1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('az_sql_1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('az_sql_1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_rest_input_ee')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ds_rest_input_ee_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adfdemostevedlg')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adfdemostevedlg_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adfdemostevedlg_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adfdemostevedlg_product_csv')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_adfdemostevedlg_product_csv_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adsl_output')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adsl_output_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adsl_output_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_azblob_adfdemostevea')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_azblob_adfdemostevea_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_onprem_udemycourse_db')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_onprem_udemycourse_db_properties_typeProperties_server')]",
					"database": "[parameters('ls_onprem_udemycourse_db_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_onprem_udemycourse_db_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_onprem_udemycourse_db_password')]"
					}
				},
				"connectVia": {
					"referenceName": "self-hosted-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/self-hosted-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_rest_service_input')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_rest_service_input_properties_typeProperties_url')]",
					"enableServerCertificateValidation": false,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_stevea_sqlserver')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('ls_stevea_sqlserver_properties_typeProperties_server')]",
					"database": "[parameters('ls_stevea_sqlserver_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_stevea_sqlserver_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_stevea_sqlserver_password')]"
					}
				},
				"connectVia": {
					"referenceName": "self-hosted-ir",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/self-hosted-ir')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_Demo1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_copy_data_demo",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-11-09T16:18:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								22
							],
							"hours": [
								16
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_copy_data_demo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_demo')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-11-09T16:16:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								16
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_schedule_demo')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2024-11-19T12:09:00",
						"timeZone": "GMT Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_storageevent_demo')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/storageeventtrigger/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_storageevent_demo_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_tumblewindow_demo')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_wait_demo_2",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 1,
					"startTime": "2024-11-19T15:33:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 5,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_wait_demo_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 15,
						"startTime": "2024-11-19T12:06:00",
						"timeZone": "GMT Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/self-hosted-ir')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_alter_row_transformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_employees_csv",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "alterRow1a"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 alterRow(deleteIf(Dept_id==3),",
						"     upsertIf(1==1)) ~> alterRow1a",
						"alterRow1a sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_key as integer,",
						"          Emp_id as integer,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['Emp_id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_employees_csv')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"srcsource sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     partitionFileNames:['out.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          Emp_id,",
						"          Name,",
						"          Gender,",
						"          Salary,",
						"          Dept_id",
						"     ),",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo_aggregate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						},
						{
							"dataset": {
								"referenceName": "ds_azure_dept",
								"type": "DatasetReference"
							},
							"name": "srcdept"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "join1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"source(output(",
						"          Dept_id as integer,",
						"          Dept_Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> srcdept",
						"srcsource aggregate(groupBy(Dept_id),",
						"     Count_employees = count(Emp_id),",
						"          avg_salary = avg(Salary)) ~> aggregate1",
						"aggregate1, srcdept join(aggregate1@Dept_id == srcdept@Dept_id,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_azure_dept')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo_conditional split')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "split1"
						},
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"srcsource split(equals(Dept_id, 1),",
						"     equals(Dept_id, 2),",
						"     disjoint: false) ~> split1@(ITemployees, HRemployees, Otheremployees)",
						"split1@ITemployees, split1@HRemployees, split1@Otheremployees union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo_exists')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable4",
								"type": "DatasetReference"
							},
							"name": "DeptSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "exists1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"source(output(",
						"          Dept_id as integer,",
						"          Dept_Name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DeptSource",
						"srcsource, DeptSource exists(srcsource@Dept_id == DeptSource@Dept_id,",
						"     negate:true,",
						"     broadcast: 'auto')~> exists1",
						"exists1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable4')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo_filter')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"srcsource filter(equals(Dept_id, 1),",
						"     partitionBy('roundRobin', 2)) ~> filter1",
						"filter1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo_lookup_derived_columns')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						},
						{
							"dataset": {
								"referenceName": "ds_azure_dept",
								"type": "DatasetReference"
							},
							"name": "srcDept"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "lookup1"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"source(output(",
						"          Dept_id as integer,",
						"          Dept_Name as string",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> srcDept",
						"srcsource, srcDept lookup(srcsource@Dept_id == srcDept@Dept_id,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookup1",
						"lookup1 derive(Salary_USD = divide(Salary, 80),",
						"          Dept_Name_new = iif(isNull(Dept_Name), 'Missing', Dept_Name),",
						"          Name = concat(Gender, '_',Name)) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_azure_dept')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo_pivot')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "pivot1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"srcsource pivot(groupBy(Dept_id),",
						"     pivotBy(Gender),",
						"     {} = count(Emp_id),",
						"     columnNaming: 'Total$N$V',",
						"     lateral: true) ~> pivot1",
						"pivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo_select')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"srcsource select(mapColumn(",
						"          Emp_id,",
						"          Dept_id,",
						"          EmpName = Name,",
						"          Salary",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     partitionFileNames:['out2.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_demo_sort_rank')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "sort1"
						},
						{
							"name": "rank1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"srcsource sort(desc(Salary, true)) ~> sort1",
						"sort1 rank(desc(Salary, true),",
						"     output(rank as long),",
						"     dense: true) ~> rank1",
						"rank1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_flatten_demo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_employee_skill_json",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          emp_id as string,",
						"          emp_name as (first_name as string, last_name as string),",
						"          skills as string[]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     documentForm: 'arrayOfDocuments',",
						"     singleQuoted: true,",
						"     partitionBy('hash', 1)) ~> source1",
						"source1 foldDown(unroll(skills),",
						"     mapColumn(",
						"          emp_id,",
						"          emp_fname = emp_name.first_name,",
						"          emp_sname = emp_name.last_name,",
						"          skills",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_employee_skill_json')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_new_branch')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						},
						{
							"name": "aggregate1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"select1 keyGenerate(output(EmpId as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"srcsource select(mapColumn(",
						"          Name,",
						"          Gender,",
						"          Salary,",
						"          Dept_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"surrogateKey1 select(mapColumn(",
						"          EmpId,",
						"          Name,",
						"          Gender,",
						"          Salary,",
						"          Dept_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"srcsource aggregate(groupBy(Dept_id),",
						"     count_emp = count(Emp_id)) ~> aggregate1",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_scd2_demo')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sql_csd2_source",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "ds_scd2_input",
								"type": "DatasetReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_csd2_source",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "exists1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "alterRow1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_key as integer,",
						"          Emp_id as integer,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer,",
						"          Is_Active as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source(output(",
						"          Emp_id as integer,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source2",
						"source1, source2 exists(source1@Emp_id == source2@Emp_id,",
						"     negate:false,",
						"     broadcast: 'auto')~> exists1",
						"exists1 derive(Is_Active = 'N') ~> derivedColumn1",
						"derivedColumn1 alterRow(updateIf(1==1)) ~> alterRow1",
						"alterRow1 select(mapColumn(",
						"          Emp_id,",
						"          Name,",
						"          Gender,",
						"          Salary,",
						"          Dept_id,",
						"          Is_Active",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_key as integer,",
						"          Emp_id as integer,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer,",
						"          Is_Active as string",
						"     ),",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:true,",
						"     upsertable:false,",
						"     keys:['Emp_id'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Emp_id,",
						"          Name,",
						"          Gender,",
						"          Salary,",
						"          Dept_id,",
						"          Is_Active",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_sql_csd2_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_scd2_input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_scd2_demo_step2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_scd2_input",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sql_csd2_source",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as integer,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 derive(Is_Active = 'Y') ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_key as integer,",
						"          Emp_id as integer,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as integer,",
						"          Is_Active as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Emp_id,",
						"          Name,",
						"          Gender,",
						"          Salary,",
						"          Dept_id,",
						"          Is_Active",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_scd2_input')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_csd2_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_surrogate_key')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "df_ds_employee_csv",
								"type": "DatasetReference"
							},
							"name": "srcsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_adl_out",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "surrogateKey1"
						},
						{
							"name": "select1"
						},
						{
							"name": "select2"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Emp_id as short,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as integer,",
						"          Dept_id as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false,",
						"     partitionBy('hash', 1)) ~> srcsource",
						"select1 keyGenerate(output(EmpId as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> surrogateKey1",
						"srcsource select(mapColumn(",
						"          Name,",
						"          Gender,",
						"          Salary,",
						"          Dept_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"surrogateKey1 select(mapColumn(",
						"          EmpId,",
						"          Name,",
						"          Gender,",
						"          Salary,",
						"          Dept_id",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select2",
						"select2 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Emp_id as string,",
						"          Name as string,",
						"          Gender as string,",
						"          Salary as string,",
						"          Dept_id as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/df_ds_employee_csv')]",
				"[concat(variables('factoryId'), '/datasets/ds_adl_out')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_traveline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "POST",
								"requestBody": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<Siri version=\"1.0\" xmlns=\"http://www.siri.org.uk/\">\n <ServiceRequest>\n <RequestTimestamp>2024-11-21T19:03:55.136Z</RequestTimestamp>\n <RequestorRef>TravelineAPI101</RequestorRef>\n <StopMonitoringRequest version=\"1.0\">\n <RequestTimestamp>2024-11-21T19:03:55.136Z</RequestTimestamp>\n <MessageIdentifier>12345</MessageIdentifier>\n <MonitoringRef>020035811</MonitoringRef>\n </StopMonitoringRequest>\n </ServiceRequest>\n</Siri>",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_traveline_rest_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_traveline_out_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_traveline_rest_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_traveline_out_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_rest_traveline')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ls_rest_traveline_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_traveline_rest_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_rest_traveline",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_rest_traveline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_traveline_out_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_adfdemostevedlg",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(utcNow(), '.csv')",
							"type": "Expression"
						},
						"folderPath": "results",
						"fileSystem": "traveline"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_adfdemostevedlg')]"
			]
		}
	]
}